        -:    0:Source:funcs.c
        -:    0:Graph:funcs.gcno
        -:    0:Data:funcs.gcda
        -:    0:Runs:9
        -:    1:#include <string.h>
        -:    2:#include "funcs.h"
        -:    3:
        -:    4:#define MAX(X,Y) (X > Y ? X : Y)
        -:    5:
        9:    6:int process(FILE *f, int *max_len)
        -:    7:{
        9:    8:    *max_len = 0;
        -:    9:
        -:   10:    int curr_num, prev_num, prev_prev_num;
        9:   11:    int curr_len = 0;
        -:   12:    int rc;
        -:   13:
        -:   14:    // read first two numbers
       24:   15:    for (int i = 0; i < 2; ++i)
        -:   16:    {
       17:   17:        rc = fscanf(f, "%d\n", &curr_num);
        -:   18:
       17:   19:        if (rc != 1)
        2:   20:            return NOT_ENOUGH_NUM;
        -:   21:
       15:   22:        prev_prev_num = prev_num;
       15:   23:        prev_num = curr_num;
        -:   24:    }
        -:   25:
        7:   26:    if (prev_prev_num != prev_num)
        5:   27:        curr_len = 2;
        -:   28: 
       19:   29:    while (1 == (rc = fscanf(f, "%d", &curr_num)))
        -:   30:    {
       18:   31:        int is_increasing = (prev_prev_num < prev_num &&
        6:   32:            prev_num < curr_num);
       15:   33:        int is_decreasing = (prev_prev_num > prev_num &&
        3:   34:            prev_num > curr_num);
        -:   35:
       12:   36:        if (is_increasing || is_decreasing)
        4:   37:            ++curr_len;
        8:   38:        else if (prev_num != curr_num)
        -:   39:        {
        5:   40:            *max_len = MAX(*max_len, curr_len);
        5:   41:            curr_len = 2;
        -:   42:        }
        -:   43:        else
        -:   44:        {
        3:   45:            *max_len = MAX(*max_len, curr_len);
        3:   46:            curr_len = 0;
        -:   47:        }
        -:   48:
       12:   49:        prev_prev_num = prev_num;
       12:   50:        prev_num = curr_num;
        -:   51:    }
        7:   52:    *max_len = MAX(*max_len, curr_len);
        -:   53:
        -:   54:    char c;
        7:   55:    rc = fscanf(f, "%c", &c);
        -:   56:    
        7:   57:    return OKAY;
        -:   58:}
